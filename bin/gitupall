#! /usr/bin/env ruby

home  = Dir.pwd
repos = Dir['*'].select { |d| File.exist?("#{d}/.git") }
width = repos.map(&:length).max

repos.each do |dir|
  Dir.chdir dir

  name = dir.split('/').last
  print "Updating #{name}... ".ljust(width + 13)

  fetch_output =
    `git fetch --all --prune 2>&1`.
    split("\n").
    select { |x| !x.nil? }.
    select { |x| x !~ /Your access is logged/ }.
    select { |x| x !~ /\AFetching / }


  if fetch_output.empty?
    print 'Up to date.'
  else
    print 'Updated. '
  end

  current_branch = `git symbolic-ref HEAD | sed 's#^refs/heads/##'`.strip
  if %w{ master main dev }.include? current_branch
    rebase_output =
      `git rebase origin/#{current_branch} 2>&1`.
      split("\n").
      select { |x| x !~ /Current branch .* is up to date./ }.
      select { |x| x !~ /Applied autostash/ }

    if !rebase_output.empty?
      print 'Rebased.'
    end
  end
  puts

  Dir.chdir home
end
